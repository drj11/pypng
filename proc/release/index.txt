Release Procedure
=================

These modified instructions have not yet been tested.

We build a wheel file, then upload it to PyPI.

You'll need `pip` and `twine`.

At top-level...

Edit ``code/png.py`` for new version number.  Then ``git commit`` this.

Get release notes into ``README.md`` somehow.

Get the latest git change hash::

    git log -n1 | sed q

Set the PYPNG_VERSION variable (extracted from `code/png.py`):

    . ./pypng-version

Add a tag for this release (the tags have this format so that
the automatically generated tarballs from github.com have the
right URL).

    git tag -a pypng-$PYPNG_VERSION -m "PyPNG release $PYPNG_VERSION"

and push:

    git push --tags origin HEAD

Make a clean clone:

    cd ${PWD%pypng*}
    git clone pypng pypng-$PYPNG_VERSION
    cd pypng-$PYPNG_VERSION

Run the shell script that drives Docker:

    pip wheel .

It's possible at this point that you might want to smoke-test the actual
release binary.  Let's assume that the release binary is good to go.

cd back into your main development directory::

    cd ${PWD%pypng*}pypng

Check that the `sh dock.sh` command populated
the `dist/` directory in the original `pypng` directory.

    ls dist

(which it won't have done)

Documentation magically appears on ReadTheDocs.
In some previous versions, docker was used to build the
documentation which was bundled into an `sdist`.

    sphinx-build -N -d sphinx-crud -a man html

Upload to PyPI:

    twine upload *.whl?

(If it complains about "you must be identified" then use
"python setup.py register" first)

Make a record in ``release/index.txt``
